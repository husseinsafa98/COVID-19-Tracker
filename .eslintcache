[{"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\index.js":"1","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\App.js":"2","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\util.js":"4","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\Map.js":"5","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\LineGraph.js":"6","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\Table.js":"7","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\InfoBox.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":4289,"mtime":1607756084928,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607752087088,"results":"12","hashOfConfig":"10"},{"size":1964,"mtime":1607756649342,"results":"13","hashOfConfig":"10"},{"size":606,"mtime":1607754817019,"results":"14","hashOfConfig":"10"},{"size":2308,"mtime":1607751568293,"results":"15","hashOfConfig":"10"},{"size":822,"mtime":1607756135891,"results":"16","hashOfConfig":"10"},{"size":862,"mtime":1607756180735,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"l9jjwv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\index.js",[],["38","39"],"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\App.js",["40"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        countryCode === \"worldwide\"\n          ? setMapCenter([34.80746, -40.4796])\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\util.js",[],"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\Map.js",[],"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\LineGraph.js",[],"C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\Table.js",["41"],"import React from 'react'\r\nimport './Table.css';\r\nimport numeral from \"numeral\";\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({country,cases,countryInfo })=>(\r\n             \r\n                <tr>\r\n                    <td>\r\n                        <div\r\n                         className='info-fla'\r\n                        >\r\n\r\n                        <img src={countryInfo.flag } style={{height:\"26px\",width:\"38px\"}}/>\r\n                       \r\n                        </div>\r\n                        </td>\r\n                    <td>{country}</td>\r\n                    <td>\r\n                    <strong>{numeral(cases).format(\"0,0\")}</strong>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","C:\\Users\\L3ban\\OneDrive\\Desktop\\covid-19-tracker\\covid-19-tracker\\src\\InfoBox.js",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":26,"column":19,"nodeType":"50","messageId":"51","endLine":26,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":15,"column":25,"nodeType":"54","endLine":15,"endColumn":92},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'setMapZoom' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["57"],["58"],"no-global-assign","no-unsafe-negation"]